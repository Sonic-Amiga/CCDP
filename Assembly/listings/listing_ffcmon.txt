1 0000 :                         ; --- EQUATES ---
1 0000 :                         
1 0000 :                         sys_done	equ 0x0100
1 0000 :                         tty_putc	equ 0x0103
1 0000 :                         tty_putb	equ 0x0106
1 0000 :                         tty_putw	equ 0x0109
1 0000 :                         tty_puts	equ 0x010C
1 0000 :                         tty_getc	equ 0x010F
1 0000 :                         tty_gets	equ 0x0112
1 0000 :                         fs_open		equ 0x0115
1 0000 :                         fs_close	equ 0x0118
1 0000 :                         fs_make		equ 0x011B
1 0000 :                         fs_delete	equ 0x011E
1 0000 :                         fs_list		equ 0x0121
1 0000 :                         fs_read		equ 0x0124
1 0000 :                         fs_write	equ 0x0127
1 0000 :                         
1 0000 :                         combuf		equ 0x01C0
1 0000 :                         	
1 0000 :                         ;	Program starts at 0x0200
1 0000 :                         	
1 0000 :                         ; --- TEXT ---
1 0000 :                         	
1 0000 :                         options:
1 0000 : D0 02 1D                	ld		b,str_opt
1 0003 : 79 01 0C                	jsr		tty_puts
1 0006 : 80 01                   	ld		al,1
1 0008 : D0 03 C7                	ld		b,sel_buffer
1 000B : 79 01 12                	jsr		tty_gets
1 000E : 81 03 C7                	ld		al,(sel_buffer)
1 0011 :                         
1 0011 : C0 30                   	ld		bl,'0'
1 0013 : 49                      	sub		al,bl
1 0014 : 14 13                   	bz		init
1 0016 :                         	
1 0016 : C0 31                   	ld		bl,'1'
1 0018 : 49                      	sub		al,bl
1 0019 : 14 2C                   	bz		seek
1 001B :                         	
1 001B : C0 32                   	ld		bl,'2'
1 001D : 49                      	sub		al,bl
1 001E : 14 48                   	bz		read
1 0020 :                         	
1 0020 : C0 33                   	ld		bl,'3'
1 0022 : 49                      	sub		al,bl
1 0023 : 14 03                   	bz		exit
1 0025 :                         	
1 0025 :                         	
1 0025 : 71 00 00                	jmp		options
1 0028 :                         	
1 0028 :                         ; Exit the program
1 0028 :                         exit:
1 0028 : 09                      	rsr
1 0029 :                         	
1 0029 :                         ; Init test
1 0029 :                         init:
1 0029 : D0 02 1A                	ld		b,str_crlf
1 002C : 79 01 0C                	jsr		tty_puts
1 002F : 90 FF F9                	ld		a,0xFFF9
1 0032 : D0 03 7D                	ld		b,cmd_seek_a
1 0035 : 79 01 5C                	jsr		set_ac
1 0038 : 79 01 63                	jsr		exec_start
1 003B : 79 01 87                	jsr		exec_end
1 003E : D0 03 03                	ld		b,str_cmdfinish
1 0041 : 79 01 0C                	jsr		tty_puts
1 0044 : 71 00 00                	jmp		options
1 0047 :                         	
1 0047 :                         	
1 0047 :                         ; Seek test
1 0047 :                         seek:
1 0047 : 79 00 E7                	jsr		seltrack
1 004A : 91 03 CE                	ld		a,(track)
1 004D : B1 03 88                	st		a,(cmd_seek_b_track)
1 0050 : 90 FF F7                	ld		a,0xFFF7
1 0053 : D0 03 83                	ld		b,cmd_seek_b
1 0056 : 79 01 5C                	jsr		set_ac
1 0059 : 79 01 63                	jsr		exec_start
1 005C : 79 01 87                	jsr		exec_end
1 005F : D0 03 03                	ld		b,str_cmdfinish
1 0062 : 79 01 0C                	jsr		tty_puts
1 0065 : 71 00 00                	jmp		options
1 0068 :                         	
1 0068 :                         ; Read test
1 0068 :                         read:
1 0068 : 79 00 E7                	jsr		seltrack
1 006B : 91 03 CE                	ld		a,(track)
1 006E : B1 03 90                	st		a,(cmd_read_track)
1 0071 : D0 02 9A                	ld		b,str_short
1 0074 : 79 01 0C                	jsr		tty_puts
1 0077 : 80 01                   	ld		al,1
1 0079 : D0 03 C7                	ld		b,sel_buffer
1 007C : 79 01 12                	jsr		tty_gets
1 007F : 81 03 C7                	ld		al,(sel_buffer)
1 0082 : C0 59                   	ld		bl,'Y'
1 0084 : 49                      	sub		al,bl
1 0085 : 14 06                   	bz		read_short
1 0087 : 90 FF C3                	ld		a,0xFFC3
1 008A : 71 00 90                	jmp		read_cmd
1 008D :                         read_short:
1 008D : 90 FF C6                	ld		a,0xFFC6
1 0090 :                         read_cmd:
1 0090 : D0 03 8B                	ld		b,cmd_read
1 0093 : 79 01 5C                	jsr		set_ac
1 0096 : D0 02 1A                	ld		b,str_crlf
1 0099 : 79 01 0C                	jsr		tty_puts
1 009C : 79 01 63                	jsr		exec_start
1 009F : 90 E6 FF                	ld		a,0xE6FF
1 00A2 : D0 03 D0                	ld		b,heap
1 00A5 : 79 01 75                	jsr		exec_end_dma
1 00A8 : D0 03 03                	ld		b,str_cmdfinish
1 00AB : 79 01 0C                	jsr		tty_puts
1 00AE : 79 00 B4                	jsr		heapdump
1 00B1 : 71 00 00                	jmp		options
1 00B4 :                         
1 00B4 :                         ; Dumps the heap into a file	
1 00B4 :                         heapdump:
1 00B4 : D0 03 70                	ld		b,str_output
1 00B7 : 79 01 1B                	jsr		fs_make
1 00BA : D0 03 70                	ld		b,str_output
1 00BD : 79 01 15                	jsr		fs_open
1 00C0 : 43 11                   	ori		al,al
1 00C2 : 17 06                   	bp		heapdump_w
1 00C4 : D0 03 5D                	ld		b,str_filerr
1 00C7 : 71 01 0C                	jmp		tty_puts
1 00CA :                         heapdump_w:
1 00CA : D0 03 D0                	ld		b,heap
1 00CD : 55 28                   	xfr		b,z
1 00CF : 3A                      	clr		a
1 00D0 :                         heapdump_l:
1 00D0 : B5 A2                   	st		a,(-s)
1 00D2 : 55 82                   	xfr		z,b
1 00D4 : 79 01 27                	jsr		fs_write
1 00D7 : 95 A1                   	ld		a,(s+)
1 00D9 : D0 01 00                	ld		b,256
1 00DC : 50 28                   	add		b,z
1 00DE : 28                      	inr		al
1 00DF : C0 19                   	ld		bl,25
1 00E1 : 49                      	sub		al,bl
1 00E2 : 15 EC                   	bnz		heapdump_l
1 00E4 : 71 01 18                	jmp		fs_close
1 00E7 :                         
1 00E7 :                         	
1 00E7 :                         
1 00E7 :                         ; Select a track
1 00E7 :                         seltrack:
1 00E7 : D0 02 87                	ld		b,str_track
1 00EA : 79 01 0C                	jsr		tty_puts
1 00ED : D0 03 C9                	ld		b,hex_buffer
1 00F0 : 80 04                   	ld		al,4
1 00F2 : 79 01 12                	jsr		tty_gets		
1 00F5 : D1 03 C9                	ld		b,(hex_buffer)
1 00F8 : 79 01 2F                	jsr		funct_htoi
1 00FB : A5 A2                   	st		al,(-s)
1 00FD : D1 03 CB                	ld		b,(hex_buffer+2)
1 0100 : 79 01 2F                	jsr		funct_htoi
1 0103 : C5 A1                   	ld		bl,(s+)
1 0105 : 45 30                   	xfr		bl,ah
1 0107 : 53 00                   	ori		a,a
1 0109 : 16 1B                   	bm		seltrack_e
1 010B : D0 02 5D                	ld		b,0x025D
1 010E : 59                      	sub		a,b
1 010F : 17 15                   	bp		seltrack_e
1 0111 : B1 03 CE                	st		a,(track)
1 0114 : D0 02 B5                	ld		b,str_showtrack
1 0117 : 79 01 0C                	jsr		tty_puts
1 011A : D1 03 CE                	ld		b,(track)
1 011D : 79 01 09                	jsr		tty_putw
1 0120 : D0 02 1A                	ld		b,str_crlf
1 0123 : 71 01 0C                	jmp		tty_puts
1 0126 :                         seltrack_e:
1 0126 : D0 02 C7                	ld		b,str_trackerr
1 0129 : 79 01 0C                	jsr		tty_puts
1 012C : 71 00 E7                	jmp		seltrack
1 012F :                         
1 012F :                         ; --- FUNCTIONS ---
1 012F :                         ; Turns a hex number in ASCII into a value
1 012F :                         ; AL = Returned value
1 012F :                         ; B = Hex value
1 012F :                         funct_htoi:
1 012F : 79 01 40                	jsr		funct_htoi_n
1 0132 : 45 10                   	xfr		al,ah
1 0134 : 45 23                   	xfr		bh,bl
1 0136 : 79 01 40                	jsr		funct_htoi_n
1 0139 : 2D                      	slr		al
1 013A : 2D                      	slr		al
1 013B : 2D                      	slr		al
1 013C : 2D                      	slr		al
1 013D : 43 01                   	ori		ah,al
1 013F : 09                      	rsr
1 0140 :                         	
1 0140 :                         	
1 0140 :                         funct_htoi_n:
1 0140 : 45 31                   	xfr		bl,al
1 0142 : C0 30                   	ld		bl,'0'
1 0144 : 49                      	sub		al,bl
1 0145 : 17 02                   	bp		funct_htoi_i
1 0147 :                         funct_htoi_e:
1 0147 : 2A                      	clr		al
1 0148 : 09                      	rsr
1 0149 :                         funct_htoi_i:
1 0149 : 80 0A                   	ld		al,10
1 014B : 41 31                   	sub		bl,al
1 014D : 17 03                   	bp		funct_htoi_a
1 014F : 45 31                   	xfr		bl,al
1 0151 : 09                      	rsr
1 0152 :                         funct_htoi_a:
1 0152 : 80 07                   	ld		al,7
1 0154 : 41 31                   	sub		bl,al
1 0156 : C0 10                   	ld		bl,16
1 0158 : 49                      	sub		al,bl
1 0159 : 17 EC                   	bp 		funct_htoi_e
1 015B : 09                      	rsr
1 015C :                         	
1 015C :                         ; Sets DMA Addr/Cnt
1 015C :                         ; A = Count
1 015C :                         ; B = Address
1 015C :                         set_ac:
1 015C : 2F 02                   	.byte	0x2F,0x02 ; dma_load_count A
1 015E : 55 20                   	xfr		b,a
1 0160 : 2F 00                   	.byte	0x2F,0x00 ; dma_load_addr B
1 0162 : 09                      	rsr
1 0163 :                         	
1 0163 :                         	
1 0163 :                         ; Starts a command
1 0163 :                         exec_start:
1 0163 : D0 02 D9                	ld		b,str_cmdstart
1 0166 : 79 01 0C                	jsr		tty_puts
1 0169 : 2F 34                   	.byte	0x2F,0x34 ; dma_set_mode 3
1 016B : 2F 06                   	.byte	0x2F,0x06 ; dma_enable
1 016D : 80 43                   	ld		al,0x43
1 016F : A1 F8 00                	st		al,(0xF800)
1 0172 : 71 01 92                	jmp		wait_done
1 0175 :                         	
1 0175 :                         exec_end_dma:
1 0175 : D0 02 EF                	ld		b,str_cmdend
1 0178 : 79 01 0C                	jsr		tty_puts
1 017B : 2F 34                   	.byte	0x2F,0x34 ; dma_set_mode 3
1 017D : 2F 06                   	.byte	0x2F,0x06 ; dma_enable
1 017F : 80 45                   	ld		al,0x45
1 0181 : A1 F8 00                	st		al,(0xF800)
1 0184 : 71 01 92                	jmp		wait_done
1 0187 :                         	
1 0187 :                         ; Ends a command
1 0187 :                         exec_end:
1 0187 : D0 02 EF                	ld		b,str_cmdend
1 018A : 79 01 0C                	jsr		tty_puts
1 018D : 80 45                   	ld		al,0x45
1 018F : A1 F8 00                	st		al,(0xF800)
1 0192 :                         	
1 0192 :                         ; Waits for a command to complete
1 0192 :                         wait_done:
1 0192 : 79 01 DE                	jsr		wait_done_fin
1 0195 : 6D A2                   	st		x,(-s)
1 0197 : 60 03 E8                	ld		x,0x03E8
1 019A :                         wait_done_l:
1 019A : 81 F8 01                	ld		al,(0xF801)
1 019D : C0 08                   	ld		bl,0x08
1 019F : 4A                      	and		al,bl
1 01A0 : 14 0E                   	bz		wait_done_f
1 01A2 : 0E                      	dly
1 01A3 : 31 40                   	dcr		x
1 01A5 : 15 F3                   	bnz		wait_done_l
1 01A7 : D0 03 2B                	ld		b,str_busyerr
1 01AA : 79 01 0C                	jsr		tty_puts
1 01AD : 65 A1                   	ld		x,(s+)
1 01AF : 09                      	rsr
1 01B0 :                         wait_done_f:
1 01B0 : 60 03 E8                	ld		x,0x03E8
1 01B3 :                         wait_done_fl:
1 01B3 : 2C                      	srr		al
1 01B4 : 10 0E                   	bl		wait_done_r
1 01B6 : 0E                      	dly
1 01B7 : 31 40                   	dcr		x
1 01B9 : 15 F8                   	bnz		wait_done_fl
1 01BB : D0 03 40                	ld		b,str_fouterr
1 01BE : 79 01 0C                	jsr		tty_puts
1 01C1 : 65 A1                   	ld		x,(s+)
1 01C3 : 09                      	rsr
1 01C4 :                         wait_done_r:
1 01C4 : 03                      	rf
1 01C5 : 81 F8 00                	ld		al,(0xF800)
1 01C8 : 15 03                   	bnz		wait_done_err
1 01CA : 65 A1                   	ld		x,(s+)
1 01CC : 09                      	rsr
1 01CD :                         wait_done_err:
1 01CD : A5 A2                   	st		al,(-s)
1 01CF : D0 03 55                	ld		b,str_err
1 01D2 : 79 01 0C                	jsr		tty_puts
1 01D5 : C5 A1                   	ld		bl,(s+)
1 01D7 : 79 01 06                	jsr		tty_putb
1 01DA : 65 A1                   	ld		x,(s+)
1 01DC : 02                      	sf
1 01DD : 09                      	rsr
1 01DE :                         	
1 01DE :                         wait_done_fin:
1 01DE : 6D A2                   	st		x,(-s)
1 01E0 : 0E                      	dly
1 01E1 : 60 03 E8                	ld		x,0x03E8
1 01E4 :                         wait_done_fin_l:
1 01E4 : 81 F8 01                	ld		al,(0xF801)
1 01E7 : 2C                      	srr		al
1 01E8 : 2C                      	srr		al
1 01E9 : 11 0E                   	bnl		wait_done_fin_e
1 01EB : 0E                      	dly
1 01EC : 31 40                   	dcr		x
1 01EE : 15 F4                   	bnz		wait_done_fin_l
1 01F0 : D0 03 16                	ld		b,str_finerr
1 01F3 : 79 01 0C                	jsr		tty_puts
1 01F6 : 65 A1                   	ld		x,(s+)
1 01F8 : 09                      	rsr
1 01F9 :                         wait_done_fin_e:
1 01F9 : 65 A1                   	ld		x,(s+)
1 01FB : 09                      	rsr
1 01FC :                         
1 01FC :                         ; --- STRINGS ---
1 01FC :                         str_hello:
1 01FC : 46 46 43 20 4D 4F 4E 49 	.ascii "FFC MONITOR/DIAGNOSTIC PROGRAM"
1 0205 : 54 4F 52 2F 44 49 41 47 ...
1 020D : 4E 4F 53 54 49 43 20 50 ...
1 0215 : 52 4F 47 52 41 4D       ...
1 021A :                         str_crlf:
1 021A : 0D 0A 00                	.byte	0x0D,0x0A,0x00
1 021D :                         
1 021D :                         str_opt:
1 021D : 53 45 4C 45 43 54 20 41 	.ascii "SELECT AN OPTION:"
1 0226 : 4E 20 4F 50 54 49 4F 4E ...
1 022E : 3A                      ...
1 022E : 0D 0A                   	.byte	0x0D,0x0A
1 0230 : 20 30 3A 20 49 4E 49 54 	.ascii	" 0: INIT FINCH DRIVE"
1 0239 : 20 46 49 4E 43 48 20 44 ...
1 0241 : 52 49 56 45             ...
1 0244 : 0D 0A                   	.byte	0x0D,0x0A
1 0246 : 20 31 3A 20 53 45 45 4B 	.ascii	" 1: SEEK FINCH DRIVE"
1 024F : 20 46 49 4E 43 48 20 44 ...
1 0257 : 52 49 56 45             ...
1 025A : 0D 0A                   	.byte	0x0D,0x0A
1 025C : 20 32 3A 20 52 45 41 44 	.ascii	" 2: READ FINCH DRIVE (16x400)"
1 0265 : 20 46 49 4E 43 48 20 44 ...
1 026D : 52 49 56 45 20 28 31 36 ...
1 0275 : 78 34 30 30 29          ...
1 0279 : 0D 0A                   	.byte	0x0D,0x0A
1 027B : 20 33 3A 20 45 58 49 54 	.ascii	" 3: EXIT"
1 0283 : 0D 0A                   	.byte	0x0D,0x0A
1 0285 : 3E                      	.ascii	">"
1 0286 : 00                      	.byte	0x00
1 0287 :                         	
1 0287 :                         str_track:
1 0287 : 0D 0A                   	.byte	0x0D,0x0A
1 0289 : 54 52 41 43 4B 20 23 20 	.ascii	"TRACK # (XXXX)? "
1 0292 : 28 58 58 58 58 29 3F 20 ...
1 0299 : 00                      	.byte	0x00
1 029A :                         	
1 029A :                         str_short:
1 029A : 53 48 4F 52 54 45 4E 20 	.ascii	"SHORTEN CMD PACKET (Y/N)? "
1 02A3 : 43 4D 44 20 50 41 43 4B ...
1 02AB : 45 54 20 28 59 2F 4E 29 ...
1 02B3 : 3F 20                   ...
1 02B4 : 00                      	.byte	0x00
1 02B5 :                         	
1 02B5 :                         str_showtrack:
1 02B5 : 0D 0A                   	.byte	0x0D,0x0A
1 02B7 : 53 45 4C 45 43 54 45 44 	.ascii	"SELECTED TRACK "
1 02C0 : 20 54 52 41 43 4B 20    ...
1 02C6 : 00                      	.byte	0x00
1 02C7 :                         	
1 02C7 :                         str_trackerr:
1 02C7 : 0D 0A                   	.byte	0x0D,0x0A
1 02C9 : 49 4E 56 41 4C 49 44 20 	.ascii	"INVALID TRACK"
1 02D2 : 54 52 41 43 4B          ...
1 02D6 : 0D 0A 00                	.byte	0x0D,0x0A,0x00
1 02D9 :                         	
1 02D9 :                         str_cmdstart:
1 02D9 : 53 54 41 52 54 49 4E 47 	.ascii	"STARTING COMMAND..."
1 02E2 : 20 43 4F 4D 4D 41 4E 44 ...
1 02EA : 2E 2E 2E                ...
1 02EC : 0D 0A 00                	.byte	0x0D,0x0A,0x00
1 02EF :                         	
1 02EF :                         str_cmdend:
1 02EF : 45 4E 44 49 4E 47 20 43 	.ascii	"ENDING COMMAND..."
1 02F8 : 4F 4D 4D 41 4E 44 2E 2E ...
1 0300 : 2E                      ...
1 0300 : 0D 0A 00                	.byte	0x0D,0x0A,0x00
1 0303 :                         	
1 0303 :                         str_cmdfinish:
1 0303 : 43 4F 4D 4D 41 4E 44 20 	.ascii	"COMMAND COMPLETE"
1 030C : 43 4F 4D 50 4C 45 54 45 ...
1 0313 : 0D 0A 00                	.byte	0x0D,0x0A,0x00
1 0316 :                         	
1 0316 :                         str_finerr:
1 0316 : 46 49 4E 20 44 49 44 20 	.ascii	"FIN DID NOT GO OFF"
1 031F : 4E 4F 54 20 47 4F 20 4F ...
1 0327 : 46 46                   ...
1 0328 : 0D 0A 00                	.byte	0x0D,0x0A,0x00
1 032B :                         	
1 032B :                         str_busyerr:
1 032B : 42 55 53 59 20 44 49 44 	.ascii	"BUSY DID NOT CLEAR"
1 0334 : 20 4E 4F 54 20 43 4C 45 ...
1 033C : 41 52                   ...
1 033D : 0D 0A 00                	.byte	0x0D,0x0A,0x00
1 0340 :                         	
1 0340 :                         str_fouterr:
1 0340 : 46 4F 55 54 20 4E 45 56 	.ascii	"FOUT NEVER CAME ON"
1 0349 : 45 52 20 43 41 4D 45 20 ...
1 0351 : 4F 4E                   ...
1 0352 : 0D 0A 00                	.byte	0x0D,0x0A,0x00
1 0355 :                         	
1 0355 :                         str_err:
1 0355 : 45 52 52 4F 52 20 23    	.ascii	"ERROR #"
1 035C : 00                      	.byte	0x00
1 035D :                         
1 035D :                         str_filerr:
1 035D : 43 41 4E 4E 4F 54 20 4F 	.ascii "CANNOT OPEN FILE"
1 0366 : 50 45 4E 20 46 49 4C 45 ...
1 036D : 0D 0A 00                	.byte	0x0D,0x0A,0x00
1 0370 :                         
1 0370 :                         str_output:
1 0370 : 46 46 43 44 45 42 55 47 	.ascii	"FFCDEBUG.DAT"
1 0379 : 2E 44 41 54             ...
1 037C : 00                      	.byte	0x00
1 037D :                         
1 037D :                         ; --- COMMANDS ---
1 037D :                         
1 037D :                         cmd_seek_a:
1 037D : 81 02 84 00 82 FF       	.byte	0x81,0x02,0x84,0x00,0x82,0xFF
1 0383 :                         	
1 0383 :                         cmd_seek_b:
1 0383 : 81 02 84 00 83          	.byte	0x81,0x02,0x84,0x00,0x83
1 0388 :                         cmd_seek_b_track:
1 0388 : 00 00                   	.byte	0x00,0x00
1 038A : FF                      	.byte 	0xFF
1 038B :                         	
1 038B :                         cmd_read:
1 038B : 81 02 84 00 83          	.byte	0x81,0x02,0x84,0x00,0x83
1 0390 :                         cmd_read_track:
1 0390 : 00 00                   	.byte	0x00,0x00
1 0392 : 8A                      	.byte	0x8A
1 0393 : 00 01 90                	.byte	0x00,0x01,0x90
1 0396 : 01 01 90                	.byte	0x01,0x01,0x90
1 0399 : 02 01 90                	.byte	0x02,0x01,0x90
1 039C : 03 01 90                	.byte	0x03,0x01,0x90
1 039F : 04 01 90                	.byte	0x04,0x01,0x90
1 03A2 : 05 01 90                	.byte	0x05,0x01,0x90
1 03A5 : 06 01 90                	.byte	0x06,0x01,0x90
1 03A8 : 07 01 90                	.byte	0x07,0x01,0x90
1 03AB : 08 01 90                	.byte	0x08,0x01,0x90
1 03AE : 09 01 90                	.byte	0x09,0x01,0x90
1 03B1 : 0A 01 90                	.byte	0x0A,0x01,0x90
1 03B4 : 0B 01 90                	.byte	0x0B,0x01,0x90
1 03B7 : 0C 01 90                	.byte	0x0C,0x01,0x90
1 03BA : 0D 01 90                	.byte	0x0D,0x01,0x90
1 03BD : 0E 01 90                	.byte	0x0E,0x01,0x90
1 03C0 : 0F 01 90                	.byte	0x0F,0x01,0x90
1 03C3 : FF                      	.byte	0xFF 
1 03C4 : 00 00 00                	.byte	0x00,0x00,0x00
1 03C7 :                         	
1 03C7 :                         
1 03C7 :                         ; --- VARIABLES ---
1 03C7 :                         
1 03C7 :                         sel_buffer:
1 03C7 : 00 00                   	.byte	0x00,0x00
1 03C9 :                         	
1 03C9 :                         hex_buffer:
1 03C9 : 00 00 00 00 00          	.byte	0x00,0x00,0x00,0x00,0x00
1 03CE :                         	
1 03CE :                         track:
1 03CE : 00 00                   	.byte	0x00,0x00
1 03D0 :                         	
1 03D0 :                         heap:
1 03D0 : 00                      	.byte	0x00
1 03D1 :                         	
1 03D1 :                         
